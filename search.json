[
  {
    "objectID": "Practicals/CodelistGenerator/index.html#codelistgenerator",
    "href": "Practicals/CodelistGenerator/index.html#codelistgenerator",
    "title": "CodelistGenerator",
    "section": "CodelistGenerator",
    "text": "CodelistGenerator"
  },
  {
    "objectID": "Practicals/Introduction/index.html#introduction-the-omop-common-data-model",
    "href": "Practicals/Introduction/index.html#introduction-the-omop-common-data-model",
    "title": "OMOP and CDMConnector",
    "section": "Introduction: The OMOP Common Data Model",
    "text": "Introduction: The OMOP Common Data Model\n\nEvery time that someone goes to the doctor and something happens the doctors write it into their records.\nEach annotation of the doctor is translated into a code, combination of letters and numbers that refers to a condition. There exist several different codding languages: SNOMED, read codes, ICD10, ICD9, RxNorm, ATC, … It depends on the region, language, type of record and others which one is used. This makes that the same condition or drug can be coded in different ways.\nA compilation of these records for a group of people is what we call the medical databases. Depending on the origin and purpose of these data there are different groups of databases: electronic health records, claims data, registries… This databases can be structured by several different tables.\nThe Observational Medical Outcomes Partnership (OMOP) Common Data Model (CDM) is an open community data standard, designed to standardise the structure and content of observational data and to enable efficient analyses that can produce reliable evidence."
  },
  {
    "objectID": "Practicals/Introduction/index.html#standarisation-of-the-data-format",
    "href": "Practicals/Introduction/index.html#standarisation-of-the-data-format",
    "title": "OMOP and CDMConnector",
    "section": "Standarisation of the data format",
    "text": "Standarisation of the data format\n\nTables and relation in the OMOP Common Data Model"
  },
  {
    "objectID": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm",
    "href": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm",
    "title": "OMOP and CDMConnector",
    "section": "Mapping a database to the OMOP CDM",
    "text": "Mapping a database to the OMOP CDM\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm-1",
    "href": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm-1",
    "title": "OMOP and CDMConnector",
    "section": "Mapping a database to the OMOP CDM",
    "text": "Mapping a database to the OMOP CDM\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm-2",
    "href": "Practicals/Introduction/index.html#mapping-a-database-to-the-omop-cdm-2",
    "title": "OMOP and CDMConnector",
    "section": "Mapping a database to the OMOP CDM",
    "text": "Mapping a database to the OMOP CDM\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#standarisation-of-the-vocabularies",
    "href": "Practicals/Introduction/index.html#standarisation-of-the-vocabularies",
    "title": "OMOP and CDMConnector",
    "section": "Standarisation of the vocabularies",
    "text": "Standarisation of the vocabularies\nFrom all the vocabularies OMOP CDM uses only a few as Standard: SNOMED for conditions, RxNorm for drugs, …\n\nThe process to obtain an standard code from non standard one is called mapping. We can find the mapping in the concept_relationship table.\n\n\nEach one of the records in clinical data tables (condition_occurrence, drug_exposure, measurement, observation, …) will be coded by two codes:\n\nSource concept: particular to each database, it is the original code.\nStandard concept: equivalent code from the standard vocabulary."
  },
  {
    "objectID": "Practicals/Introduction/index.html#example-of-mapping",
    "href": "Practicals/Introduction/index.html#example-of-mapping",
    "title": "OMOP and CDMConnector",
    "section": "Example of mapping",
    "text": "Example of mapping\nIn concept relationship we can find different information such as:\n\nConcept relationship\nIn particular, we have the Maps to and Mapped from relations that can help us to see the mapping between codes."
  },
  {
    "objectID": "Practicals/Introduction/index.html#example-of-mapping-1",
    "href": "Practicals/Introduction/index.html#example-of-mapping-1",
    "title": "OMOP and CDMConnector",
    "section": "Example of mapping",
    "text": "Example of mapping\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#example-of-mapping-2",
    "href": "Practicals/Introduction/index.html#example-of-mapping-2",
    "title": "OMOP and CDMConnector",
    "section": "Example of mapping",
    "text": "Example of mapping\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#example-of-mapping-3",
    "href": "Practicals/Introduction/index.html#example-of-mapping-3",
    "title": "OMOP and CDMConnector",
    "section": "Example of mapping",
    "text": "Example of mapping\n\nMapping process"
  },
  {
    "objectID": "Practicals/Introduction/index.html#more-details",
    "href": "Practicals/Introduction/index.html#more-details",
    "title": "OMOP and CDMConnector",
    "section": "More details",
    "text": "More details\n\nFor more details on how the vocabularies work you can check: Vocabulary course in EHDEN academy\n\n\nAll details about OMOP CDM and more can be found in: the book of ohdsi.\n\n\nThe book of ohdsi cover"
  },
  {
    "objectID": "Practicals/Introduction/index.html#connecting-to-a-database-from-r-the-dbi-package",
    "href": "Practicals/Introduction/index.html#connecting-to-a-database-from-r-the-dbi-package",
    "title": "OMOP and CDMConnector",
    "section": "Connecting to a database from R (the DBI package)",
    "text": "Connecting to a database from R (the DBI package)\n\nDatabase connections from R can be made using the DBI package.\n\nlibrary(DBI)\n\n\n\nConnect to postgres:\n\ndb &lt;- DBI::dbConnect(\n  RPostgres::Postgres(),\n  dbname = \"...\",\n  host = \"...\",\n  user = \"...\",\n  password = \"...\"\n)"
  },
  {
    "objectID": "Practicals/Introduction/index.html#connecting-to-a-database-from-r-the-dbi-package-1",
    "href": "Practicals/Introduction/index.html#connecting-to-a-database-from-r-the-dbi-package-1",
    "title": "OMOP and CDMConnector",
    "section": "Connecting to a database from R (the DBI package)",
    "text": "Connecting to a database from R (the DBI package)\nConnect to Sql server:\n\ndb &lt;- DBI::dbConnect(\n  odbc::odbc(),\n  Driver   = \"ODBC Driver 18 for SQL Server\",\n  Server   = \"...\",\n  Database = \"...\",\n  UID      = \"...\",\n  PWD      = \"...\",\n  TrustServerCertificate = \"yes\",\n  Port     = \"...\"\n)\n\n\nIn this CDMConnector article you can see how to connect to the different supported DBMS."
  },
  {
    "objectID": "Practicals/Introduction/index.html#connect-to-eunomia",
    "href": "Practicals/Introduction/index.html#connect-to-eunomia",
    "title": "OMOP and CDMConnector",
    "section": "Connect to eunomia",
    "text": "Connect to eunomia\n\nEunomia is a synthetic OMOP database with ~2,600 individuals. It is freely available and you can download it as:\n\n\n\ndbName &lt;- \"GiBleed\"\nCDMConnector::requireEunomia(datasetName = dbName)\n\n\nDownload completed!\n\n\n\n\nTo connect to this database we are going to use duckdb\n\ndb &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = CDMConnector::eunomiaDir(datasetName = dbName))\ndb"
  },
  {
    "objectID": "Practicals/Introduction/index.html#databases-organisation",
    "href": "Practicals/Introduction/index.html#databases-organisation",
    "title": "OMOP and CDMConnector",
    "section": "Databases organisation",
    "text": "Databases organisation\n\nDatabases are organised by schemas (blueprint or plan that defines how the data will be organised and structured within the database).\n\n\nIn general, OMOP databases have two schemas:\n\ncdm schema: it contains all the tables of the cdm. Usually we only will have reading permission for this schema.\nwrite schema: it is a place where we can store tables (like cohorts). We need writing permissions to this schema.\n\n\n\nEunomia only has a single schema (main) that will be used as cdm schema and write schema."
  },
  {
    "objectID": "Practicals/Introduction/index.html#cdmconnector",
    "href": "Practicals/Introduction/index.html#cdmconnector",
    "title": "OMOP and CDMConnector",
    "section": "CDMConnector",
    "text": "CDMConnector"
  },
  {
    "objectID": "Practicals/Introduction/index.html#creating-a-reference-to-the-omop-common-data-model",
    "href": "Practicals/Introduction/index.html#creating-a-reference-to-the-omop-common-data-model",
    "title": "OMOP and CDMConnector",
    "section": "Creating a reference to the OMOP common data model",
    "text": "Creating a reference to the OMOP common data model\nWe already know what the structure of the OMOP CDM looks like. The CDMConnector package was made to help you to quickly create a reference to the OMOP CDM data as a whole.\n\nlibrary(CDMConnector)\n\n\nTo install any of these packages that we use you can type: install.packages(\"CDMConnector\") in the console."
  },
  {
    "objectID": "Practicals/Introduction/index.html#lets-create-our-first-cdm-reference",
    "href": "Practicals/Introduction/index.html#lets-create-our-first-cdm-reference",
    "title": "OMOP and CDMConnector",
    "section": "Let’s create our first cdm reference",
    "text": "Let’s create our first cdm reference\n\ncdm &lt;- CDMConnector::cdmFromCon(con = db, cdmSchema = \"main\", writeSchema = \"main\")\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of Synthea ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: -"
  },
  {
    "objectID": "Practicals/Introduction/index.html#access-to-tables-of-the-cdm-reference",
    "href": "Practicals/Introduction/index.html#access-to-tables-of-the-cdm-reference",
    "title": "OMOP and CDMConnector",
    "section": "Access to tables of the cdm reference",
    "text": "Access to tables of the cdm reference\n\ncdm$person\n\n# Source:   table&lt;person&gt; [?? x 18]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpK0BL4u/file224739401c63.duckdb]\n   person_id gender_concept_id year_of_birth month_of_birth day_of_birth birth_datetime      race_concept_id\n       &lt;int&gt;             &lt;int&gt;         &lt;int&gt;          &lt;int&gt;        &lt;int&gt; &lt;dttm&gt;                        &lt;int&gt;\n 1         6              8532          1963             12           31 1963-12-31 00:00:00            8516\n 2       123              8507          1950              4           12 1950-04-12 00:00:00            8527\n 3       129              8507          1974             10            7 1974-10-07 00:00:00            8527\n 4        16              8532          1971             10           13 1971-10-13 00:00:00            8527\n 5        65              8532          1967              3           31 1967-03-31 00:00:00            8516\n 6        74              8532          1972              1            5 1972-01-05 00:00:00            8527\n 7        42              8532          1909             11            2 1909-11-02 00:00:00            8527\n 8       187              8507          1945              7           23 1945-07-23 00:00:00            8527\n 9        18              8532          1965             11           17 1965-11-17 00:00:00            8527\n10       111              8532          1975              5            2 1975-05-02 00:00:00            8527\n# ℹ more rows\n# ℹ 11 more variables: ethnicity_concept_id &lt;int&gt;, location_id &lt;int&gt;, provider_id &lt;int&gt;, care_site_id &lt;int&gt;,\n#   person_source_value &lt;chr&gt;, gender_source_value &lt;chr&gt;, gender_source_concept_id &lt;int&gt;, race_source_value &lt;chr&gt;,\n#   race_source_concept_id &lt;int&gt;, ethnicity_source_value &lt;chr&gt;, ethnicity_source_concept_id &lt;int&gt;"
  },
  {
    "objectID": "Practicals/Introduction/index.html#read-tables-in-eunomia",
    "href": "Practicals/Introduction/index.html#read-tables-in-eunomia",
    "title": "OMOP and CDMConnector",
    "section": "Read tables in Eunomia",
    "text": "Read tables in Eunomia\n\nOnce we read a table we can operate with it and for example count the number of rows of person table.\n\ncdm$person |&gt;\n  dplyr::count()\n\n# Source:   SQL [?? x 1]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpK0BL4u/file224739401c63.duckdb]\n      n\n  &lt;dbl&gt;\n1  2694"
  },
  {
    "objectID": "Practicals/Introduction/index.html#operation-with-tidyverse",
    "href": "Practicals/Introduction/index.html#operation-with-tidyverse",
    "title": "OMOP and CDMConnector",
    "section": "Operation with tidyverse",
    "text": "Operation with tidyverse\nIf you are familiarised with tidyverse you can use any of the usual dplyr commands in you database tables.\n\n\ncdm$drug_exposure |&gt;\n  dplyr::group_by(drug_concept_id) |&gt;\n  dplyr::summarise(number_persons = dplyr::n_distinct(person_id)) |&gt;\n  dplyr::collect() |&gt;\n  dplyr::arrange(dplyr::desc(number_persons))\n\n# A tibble: 113 × 2\n   drug_concept_id number_persons\n             &lt;int&gt;          &lt;dbl&gt;\n 1        40213227           2660\n 2         1127433           2580\n 3        40213160           2140\n 4         1713671           2021\n 5        19059056           1927\n 6         1118084           1844\n 7        40213296           1737\n 8        40213306           1560\n 9         1127078           1428\n10        40229134           1393\n# ℹ 103 more rows"
  },
  {
    "objectID": "Practicals/Introduction/index.html#database-name",
    "href": "Practicals/Introduction/index.html#database-name",
    "title": "OMOP and CDMConnector",
    "section": "Database name",
    "text": "Database name\nWhen we have a cdm object we can check which is the name of that database using:\n\n\n\nCDMConnector::cdmName(cdm)\n\n[1] \"Synthea\"\n\n\n\n\n\nIn some cases we want to give a database a name that we want, this can be done at the connection stage:\n\n\n\n\ncdm &lt;- CDMConnector::cdmFromCon(\n  con = db, cdmSchema = \"main\", writeSchema = \"main\", cdmName = \"EUNOMIA\"\n)\n\n\n\n\n\nCDMConnector::cdmName(cdm)\n\n[1] \"EUNOMIA\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#create-a-new-table",
    "href": "Practicals/Introduction/index.html#create-a-new-table",
    "title": "OMOP and CDMConnector",
    "section": "Create a new table",
    "text": "Create a new table\nLet’s say I want to subset the condition_occurrence table to a certain rows and certain columns and save it so I can later access it.\n\ntemporary table (default):\n\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"note\"                  \"note_nlp\"              \"observation\"          \n[25] \"observation_period\"    \"payer_plan_period\"     \"person\"                \"procedure_occurrence\" \n[29] \"provider\"              \"relationship\"          \"source_to_concept_map\" \"specimen\"             \n[33] \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\"           \n\n\n\n\n\ncdm$my_saved_table &lt;- cdm$condition_occurrence |&gt;\n  dplyr::filter(condition_concept_id == 4112343) |&gt;\n  dplyr::select(person_id, condition_start_date) |&gt;\n  dplyr::compute()\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"note\"                  \"note_nlp\"              \"observation\"          \n[25] \"observation_period\"    \"payer_plan_period\"     \"person\"                \"procedure_occurrence\" \n[29] \"provider\"              \"relationship\"          \"source_to_concept_map\" \"specimen\"             \n[33] \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\"            \"og_001_1750280230\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#create-a-new-table-1",
    "href": "Practicals/Introduction/index.html#create-a-new-table-1",
    "title": "OMOP and CDMConnector",
    "section": "Create a new table",
    "text": "Create a new table\n\npermanent table:\n\ncdm$my_saved_table &lt;- cdm$condition_occurrence |&gt;\n  dplyr::filter(condition_concept_id == 4112343) |&gt;\n  dplyr::select(person_id, condition_start_date) |&gt;\n  dplyr::compute(name = \"my_saved_table\", temporary = FALSE)\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"my_saved_table\"        \"note\"                  \"note_nlp\"             \n[25] \"observation\"           \"observation_period\"    \"payer_plan_period\"     \"person\"               \n[29] \"procedure_occurrence\"  \"provider\"              \"relationship\"          \"source_to_concept_map\"\n[33] \"specimen\"              \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\"           \n[37] \"og_001_1750280230\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#create-a-new-table-2",
    "href": "Practicals/Introduction/index.html#create-a-new-table-2",
    "title": "OMOP and CDMConnector",
    "section": "Create a new table",
    "text": "Create a new table\n\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of EUNOMIA ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: my_saved_table\n\ncdm$my_saved_table\n\n# Source:   table&lt;my_saved_table&gt; [?? x 2]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpK0BL4u/file224739401c63.duckdb]\n   person_id condition_start_date\n       &lt;int&gt; &lt;date&gt;              \n 1       263 2015-10-02          \n 2       439 1990-03-20          \n 3       449 1999-12-12          \n 4       515 1961-11-14          \n 5        17 1963-12-02          \n 6        30 1993-03-19          \n 7        90 1970-01-15          \n 8       116 1959-06-11          \n 9       137 2005-11-15          \n10       176 1986-10-08          \n# ℹ more rows"
  },
  {
    "objectID": "Practicals/Introduction/index.html#drop-an-existing-table",
    "href": "Practicals/Introduction/index.html#drop-an-existing-table",
    "title": "OMOP and CDMConnector",
    "section": "Drop an existing table",
    "text": "Drop an existing table\nTo drop an existing table:\n\nEliminate the table from the cdm object.\nEliminate the table from the database.\n\n\n\ncdm &lt;- CDMConnector::dropSourceTable(cdm = cdm, name = \"my_saved_table\")\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of EUNOMIA ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: -"
  },
  {
    "objectID": "Practicals/Introduction/index.html#drop-an-existing-table-1",
    "href": "Practicals/Introduction/index.html#drop-an-existing-table-1",
    "title": "OMOP and CDMConnector",
    "section": "Drop an existing table",
    "text": "Drop an existing table\n\n\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"note\"                  \"note_nlp\"              \"observation\"          \n[25] \"observation_period\"    \"payer_plan_period\"     \"person\"                \"procedure_occurrence\" \n[29] \"provider\"              \"relationship\"          \"source_to_concept_map\" \"specimen\"             \n[33] \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\"            \"og_001_1750280230\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#drop-an-existing-table-2",
    "href": "Practicals/Introduction/index.html#drop-an-existing-table-2",
    "title": "OMOP and CDMConnector",
    "section": "Drop an existing table",
    "text": "Drop an existing table\nLet’s drop also the other table that we created:\n\ncdm &lt;- CDMConnector::dropSourceTable(cdm = cdm, name = dplyr::starts_with(\"og_\"))\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of EUNOMIA ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: -"
  },
  {
    "objectID": "Practicals/Introduction/index.html#drop-an-existing-table-3",
    "href": "Practicals/Introduction/index.html#drop-an-existing-table-3",
    "title": "OMOP and CDMConnector",
    "section": "Drop an existing table",
    "text": "Drop an existing table\n\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"note\"                  \"note_nlp\"              \"observation\"          \n[25] \"observation_period\"    \"payer_plan_period\"     \"person\"                \"procedure_occurrence\" \n[29] \"provider\"              \"relationship\"          \"source_to_concept_map\" \"specimen\"             \n[33] \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#insert-a-table",
    "href": "Practicals/Introduction/index.html#insert-a-table",
    "title": "OMOP and CDMConnector",
    "section": "Insert a table",
    "text": "Insert a table\nLet’s say we have a local tibble and we want to insert it in the cdm:\n\ncdm &lt;- CDMConnector::insertTable(cdm = cdm, name = \"my_test_table\", table = cars)\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of EUNOMIA ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: my_test_table"
  },
  {
    "objectID": "Practicals/Introduction/index.html#insert-a-table-1",
    "href": "Practicals/Introduction/index.html#insert-a-table-1",
    "title": "OMOP and CDMConnector",
    "section": "Insert a table",
    "text": "Insert a table\n\nCDMConnector::listSourceTables(cdm)\n\n [1] \"care_site\"             \"cdm_source\"            \"concept\"               \"concept_ancestor\"     \n [5] \"concept_class\"         \"concept_relationship\"  \"concept_synonym\"       \"condition_era\"        \n [9] \"condition_occurrence\"  \"cost\"                  \"death\"                 \"device_exposure\"      \n[13] \"domain\"                \"dose_era\"              \"drug_era\"              \"drug_exposure\"        \n[17] \"drug_strength\"         \"fact_relationship\"     \"location\"              \"measurement\"          \n[21] \"metadata\"              \"my_test_table\"         \"note\"                  \"note_nlp\"             \n[25] \"observation\"           \"observation_period\"    \"payer_plan_period\"     \"person\"               \n[29] \"procedure_occurrence\"  \"provider\"              \"relationship\"          \"source_to_concept_map\"\n[33] \"specimen\"              \"visit_detail\"          \"visit_occurrence\"      \"vocabulary\"           \n\ncdm$my_test_table\n\n# Source:   table&lt;my_test_table&gt; [?? x 2]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpK0BL4u/file224739401c63.duckdb]\n   speed  dist\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     4     2\n 2     4    10\n 3     7     4\n 4     7    22\n 5     8    16\n 6     9    10\n 7    10    18\n 8    10    26\n 9    10    34\n10    11    17\n# ℹ more rows"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix",
    "href": "Practicals/Introduction/index.html#use-a-prefix",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\nIt is VERY IMPORTANT that when we create the cdm object we use a prefix:\n\ncdm &lt;- CDMConnector::cdmFromCon(\n  con = db, \n  cdmSchema = \"main\", \n  writeSchema = \"main\", \n  writePrefix = \"my_prefix_\"\n)\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of Synthea ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: -"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-1",
    "href": "Practicals/Introduction/index.html#use-a-prefix-1",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\nNow when we create a new table the prefix will be automatically added:\n\ncdm &lt;- CDMConnector::insertTable(cdm = cdm, name = \"my_test_table\", table = cars)\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of Synthea ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: my_test_table"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-2",
    "href": "Practicals/Introduction/index.html#use-a-prefix-2",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\n\nCDMConnector::listSourceTables(cdm = cdm)\n\n[1] \"my_test_table\"\n\ncdm$my_test_table\n\n# Source:   table&lt;my_prefix_my_test_table&gt; [?? x 2]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpK0BL4u/file224739401c63.duckdb]\n   speed  dist\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     4     2\n 2     4    10\n 3     7     4\n 4     7    22\n 5     8    16\n 6     9    10\n 7    10    18\n 8    10    26\n 9    10    34\n10    11    17\n# ℹ more rows"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-3",
    "href": "Practicals/Introduction/index.html#use-a-prefix-3",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\nDO NOT use the prefix to drop tables, you only care about the prefix at the connection stage!\n\ncdm &lt;- CDMConnector::dropSourceTable(cdm = cdm, name = \"my_prefix_my_test_table\")\nCDMConnector::listSourceTables(cdm = cdm)\n\n[1] \"my_test_table\""
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-4",
    "href": "Practicals/Introduction/index.html#use-a-prefix-4",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\n\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of Synthea ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: my_test_table"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-5",
    "href": "Practicals/Introduction/index.html#use-a-prefix-5",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\nDO NOT use the prefix to drop tables, you only care about the prefix at the connection stage!\n\ncdm &lt;- CDMConnector::dropSourceTable(cdm = cdm, name = \"my_test_table\")\nCDMConnector::listSourceTables(cdm = cdm)\n\ncharacter(0)"
  },
  {
    "objectID": "Practicals/Introduction/index.html#use-a-prefix-6",
    "href": "Practicals/Introduction/index.html#use-a-prefix-6",
    "title": "OMOP and CDMConnector",
    "section": "Use a prefix",
    "text": "Use a prefix\n\ncdm\n\n\n\n\n── # OMOP CDM reference (duckdb) of Synthea ────────────────────────────────────────────────────────────────────────────\n\n\n• omop tables: person, observation_period, visit_occurrence, visit_detail, condition_occurrence, drug_exposure,\nprocedure_occurrence, device_exposure, measurement, observation, death, note, note_nlp, specimen, fact_relationship,\nlocation, care_site, provider, payer_plan_period, cost, drug_era, dose_era, condition_era, metadata, cdm_source,\nconcept, vocabulary, domain, concept_class, concept_relationship, relationship, concept_synonym, concept_ancestor,\nsource_to_concept_map, drug_strength\n\n\n• cohort tables: -\n\n\n• achilles tables: -\n\n\n• other tables: -"
  },
  {
    "objectID": "Practicals/Introduction/index.html#consistency-rules",
    "href": "Practicals/Introduction/index.html#consistency-rules",
    "title": "OMOP and CDMConnector",
    "section": "Consistency rules",
    "text": "Consistency rules\nWe use compute() to compute the result into a temporary (temporary = TRUE) or permanent (temporary = FALSE) table.\nIf it is a temporary table we can assign assign it to where I want for example:\n\ncdm$my_custom_name &lt;- cdm$person |&gt; \n  dplyr::compute()\n\n\nIf it is a permanent table we can only assign it to the same name:\nerror:\n\ncdm$my_custom_name &lt;- cdm$person |&gt; \n  dplyr::compute(name = \"not_my_custom_name\", temporary = FALSE)\n\nError in `[[&lt;-`:\n! You can't assign a table named not_my_custom_name to my_custom_name. Please use compute to change table name.\n\n\n\n\nno error:\n\ncdm$my_custom_name &lt;- cdm$person |&gt; \n  dplyr::compute(name = \"my_custom_name\", temporary = FALSE)"
  },
  {
    "objectID": "Practicals/Introduction/index.html#consistency-rules-1",
    "href": "Practicals/Introduction/index.html#consistency-rules-1",
    "title": "OMOP and CDMConnector",
    "section": "Consistency rules",
    "text": "Consistency rules\nOmop names are reserved words, e.g. we can not assign a table that is not the person table to cdm$person.\n\n\ncdm$person &lt;- cdm$drug_exposure |&gt; \n  dplyr::compute(name = \"person\", temporary = FALSE)\n\nError in `newOmopTable()`:\n! gender_concept_id, year_of_birth, race_concept_id and ethnicity_concept_id are not present in table person\n\n\n\n\n\ncdm$drug_exposure &lt;- cdm$drug_exposure |&gt; \n  dplyr::rename(\"my_id\" = \"person_id\") |&gt; \n  dplyr::compute(name = \"drug_exposure\", temporary = FALSE)\n\nError in `newOmopTable()`:\n! person_id is not present in table drug_exposure"
  },
  {
    "objectID": "Practicals/IncidencePrevalence/index.html#incidenceprevalence",
    "href": "Practicals/IncidencePrevalence/index.html#incidenceprevalence",
    "title": "IncidencePrevalence",
    "section": "IncidencePrevalence",
    "text": "IncidencePrevalence"
  },
  {
    "objectID": "Practicals/CohortCharacteristics/index.html#cohortcharacteristics",
    "href": "Practicals/CohortCharacteristics/index.html#cohortcharacteristics",
    "title": "CohortCharacteristics",
    "section": "CohortCharacteristics",
    "text": "CohortCharacteristics"
  },
  {
    "objectID": "Practicals/PhenotypeR/index.html#introduction",
    "href": "Practicals/PhenotypeR/index.html#introduction",
    "title": "PhenotypeR",
    "section": "Introduction",
    "text": "Introduction\n\nPhenotypeR package is designed to review cohorts in OMOP CDM.\n\n\n\n\n\nThe code is publicly available in OHDSI’s GitHub repository PhenoypeR.\n\n\n\n\n\nPhenotypeR 0.1.5 is available in CRAN.\n\n\n\n\n\nVignettes with further information can be found in the package website."
  },
  {
    "objectID": "Practicals/PhenotypeR/index.html#set-of-functions-individual-diagnostics-assessment",
    "href": "Practicals/PhenotypeR/index.html#set-of-functions-individual-diagnostics-assessment",
    "title": "PhenotypeR",
    "section": "Set of Functions: Individual Diagnostics Assessment",
    "text": "Set of Functions: Individual Diagnostics Assessment\n\n\n\n\n\n\n\nDatabase diagnostics\n\nSummarises the databases metadata and the observation period.\ndatabaseDiagnostics()\n\n\n\n\n\n\n\n\nCodelist diagnostics\n\nSummarises the codelist use associated to our cohort.\ncodelistDiagnostics()\n\n\n\n\n\n\nCohort diagnostics\n\nSummarises baseline characteristics, attrition, overlap, and large-scale characteristics. It also allows to compare our results with a matched cohort.\ncohortDiagnostics()\n\n\n\n\n\n\n\n\nPopulation diagnostics\n\nIncidence and prevalence of our cohort in the database.\npopulationDiagnostics()"
  },
  {
    "objectID": "Practicals/PhenotypeR/index.html#set-of-functions-phenotype-diagnostics",
    "href": "Practicals/PhenotypeR/index.html#set-of-functions-phenotype-diagnostics",
    "title": "PhenotypeR",
    "section": "Set of Functions: Phenotype Diagnostics",
    "text": "Set of Functions: Phenotype Diagnostics\n\nComprises all the diagnostics that are being offered in this package.\n\n\n\nresult &lt;- phenotypeDiagnostics(\n  cohort,\n  databaseDiagnostics = TRUE,\n  codelistDiagnostics = TRUE,\n  cohortDiagnostics = TRUE,\n  match = TRUE,\n  matchedSample = NULL,\n  populationDiagnostics = TRUE,\n  populationSample = NULL,\n  populationDateRange = as.Date(c(NA,NA))\n)\n\n\nCreate a shiny app to visualize all the results\n\n\n\n\nshinyDiagnostics(result, directory = here())"
  },
  {
    "objectID": "Practicals/welcome.html#welcome",
    "href": "Practicals/welcome.html#welcome",
    "title": "Welcome to the Analytics track",
    "section": "Welcome",
    "text": "Welcome"
  },
  {
    "objectID": "Practicals/welcome.html#the-omop-cdm",
    "href": "Practicals/welcome.html#the-omop-cdm",
    "title": "Welcome to the Analytics track",
    "section": "The OMOP CDM",
    "text": "The OMOP CDM"
  },
  {
    "objectID": "Practicals/welcome.html#the-packages",
    "href": "Practicals/welcome.html#the-packages",
    "title": "Welcome to the Analytics track",
    "section": "The packages",
    "text": "The packages"
  },
  {
    "objectID": "Practicals/welcome.html#what-to-expect",
    "href": "Practicals/welcome.html#what-to-expect",
    "title": "Welcome to the Analytics track",
    "section": "What to expect",
    "text": "What to expect"
  },
  {
    "objectID": "Practicals/welcome.html#goals",
    "href": "Practicals/welcome.html#goals",
    "title": "Welcome to the Analytics track",
    "section": "Goals",
    "text": "Goals"
  },
  {
    "objectID": "Practicals/welcome.html#schedule",
    "href": "Practicals/welcome.html#schedule",
    "title": "Welcome to the Analytics track",
    "section": "Schedule",
    "text": "Schedule"
  },
  {
    "objectID": "Practicals/welcome.html#set-up",
    "href": "Practicals/welcome.html#set-up",
    "title": "Welcome to the Analytics track",
    "section": "Set up",
    "text": "Set up"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#introduction",
    "href": "Practicals/CohortSurvival/index.html#introduction",
    "title": "CohortSurvival",
    "section": "Introduction",
    "text": "Introduction\n\nCohortSurvival is a package designed to support descriptive survival studies in R, using data mapped to the OMOP Common Data Model.\n\n\n\n\n\nThe code is publicly available in the DARWIN EU’s GitHub repository CohortSurvival.\n\n\n\n\n\nCohortSurvival v1.0.1 is available in CRAN.\n\n\n\n\n\nVignettes with further information can be found in the package website."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#how-do-you-use-cohortsurvival",
    "href": "Practicals/CohortSurvival/index.html#how-do-you-use-cohortsurvival",
    "title": "CohortSurvival",
    "section": "How do you use CohortSurvival?",
    "text": "How do you use CohortSurvival?\n\n\n\n\n1) Create a cdm object with the cohorts of interest\nYou only need to specify the exposure and the outcome cohort names.\n\n\n\n\n\n2) Run the survival estimation\nAdd any additional strata or input parameters necessary for your study.\n\n\n\n\n\n3) Plot and tabulate the results\nUse the in-built visualisation functions from the package to plot the survival estimates and display the survival summary in a neat table."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#cohortsurvivals-main-functionality",
    "href": "Practicals/CohortSurvival/index.html#cohortsurvivals-main-functionality",
    "title": "CohortSurvival",
    "section": "CohortSurvival’s main functionality",
    "text": "CohortSurvival’s main functionality\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nEstimate single event survival Specify exposure and outcome cohorts.\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nEstimate competing risk survival Specify exposure, outcome and competing outcome cohorts.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nDo further survival analyses Add survival information to the cohort of interest to run survival models using other well-known packages (i.e. survival)."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#create-cdm-and-get-cohorts",
    "href": "Practicals/CohortSurvival/index.html#create-cdm-and-get-cohorts",
    "title": "CohortSurvival",
    "section": "Create cdm and get cohorts",
    "text": "Create cdm and get cohorts\n\n# Download Eunomia \nrequireEunomia()\n\n\nDownload completed!\n\n# Connect to the \"database\"\ncon &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())\n# Create CDM reference object\ncdm &lt;- cdmFromCon(\n  con, \n  cdmSchema = \"main\", \n  writeSchema = \"main\",\n  writePrefix = \"my_study_\"\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\nSingle event survival estimation function, with all its input parameters.\n\nestimateSingleEventSurvival(\n  cdm,\n  targetCohortTable,\n  outcomeCohortTable,\n  outcomeDateVariable = \"cohort_start_date\",\n  outcomeWashout = Inf,\n  censorOnCohortExit = FALSE,\n  censorOnDate = NULL,\n  followUpDays = Inf,\n  strata = NULL,\n  eventGap = 30,\n  estimateGap = 1,\n  restrictedMeanFollowUp = NULL,\n  minimumSurvivalDays = 1\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-1",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-1",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\nPlotting function, with all its input parameters.\n\nplotSurvival(\n  result,\n  ribbon = TRUE,\n  facet = NULL,\n  colour = NULL,\n  cumulativeFailure = FALE,\n  riskTable = FALSE,\n  riskTable(30)\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-2",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-2",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\nMain tabulating function, with all its input parameters.\n\ntableSurvival(\n  x,\n  times = NULL,\n  timeScale = \"days\",\n  header = c(\"estimate\"),\n  type = \"gt\",\n  groupColumn = NULL,\n  .options = list()\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-3",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-3",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\nIn our case, we will study discontinuation of ibuprofen. Therefore, we will use the same cohort as both target and outcome. Additionally, we will need to change outcomeDateVariable to cohort_end_date.\n\n\ncdm &lt;- generateIngredientCohortSet(\n  cdm = cdm,\n  name = \"ibuprofen\",\n  ingredient = \"ibuprofen\",\n  gapEra = 7\n)\n\nsurvivalResult &lt;- estimateSingleEventSurvival(\n  cdm = cdm, \n  targetCohortTable = \"ibuprofen\",\n  outcomeCohortTable = \"ibuprofen\",\n  outcomeDateVariable = \"cohort_end_date\"\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-4",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-4",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\n\nglimpse(survivalResult, width = 100)\n\nRows: 325\nColumns: 13\n$ result_id        &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ cdm_name         &lt;chr&gt; \"Synthea\", \"Synthea\", \"Synthea\", \"Synthea\", \"Synthea\", \"Synthea\", \"Synthe…\n$ group_name       &lt;chr&gt; \"target_cohort\", \"target_cohort\", \"target_cohort\", \"target_cohort\", \"targ…\n$ group_level      &lt;chr&gt; \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprof…\n$ strata_name      &lt;chr&gt; \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", \"overal…\n$ strata_level     &lt;chr&gt; \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", \"overall\", \"overal…\n$ variable_name    &lt;chr&gt; \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcom…\n$ variable_level   &lt;chr&gt; \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprofen\", \"ibuprof…\n$ estimate_name    &lt;chr&gt; \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_upper\", \"estimate\", \"es…\n$ estimate_type    &lt;chr&gt; \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeri…\n$ estimate_value   &lt;chr&gt; \"1\", \"1\", \"1\", \"0.9979\", \"0.9956\", \"1\", \"0.9979\", \"0.9956\", \"1\", \"0.9979\"…\n$ additional_name  &lt;chr&gt; \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"…\n$ additional_level &lt;chr&gt; \"0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\", \"4\", \"4\", \"4\"…"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-5",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-5",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\n\nplotSurvival(survivalResult)\n\n\n\n\ntableSurvival(survivalResult, times = c(7, 30, 75))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nTarget cohort\nOutcome name\n\nEstimate name\n\n\n\nNumber records\nNumber events\nMedian survival (95% CI)\nRestricted mean survival (95% CI)\n7 days survival estimate\n30 days survival estimate\n75 days survival estimate\n\n\n\nSynthea\nibuprofen\nibuprofen\n1,448\n1,448\n21.00 (21.00, 21.00)\n29.00 (28.00, 31.00)\n99.79 (99.56, 100.00)\n24.65 (22.53, 26.98)\n7.18 (5.97, 8.64)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-6",
    "href": "Practicals/CohortSurvival/index.html#use-estimatesinglesurvival-for-treatment-adherence-6",
    "title": "CohortSurvival",
    "section": "Use estimateSingleSurvival() for treatment adherence",
    "text": "Use estimateSingleSurvival() for treatment adherence\n\n\n\nYou can also visualise the risk table, with information on number of people at risk, number of events and number of people censored by event timepoint (defined by eventGap).\n\nriskTable(survivalResult)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nTarget cohort\nOutcome name\nTime\nEvent gap\n\nEstimate name\n\n\n\nNumber at risk\nNumber events\nNumber censored\n\n\n\n\nSynthea\nibuprofen\nibuprofen\n0\n30\n1,448\n0\n0\n\n\n\n\n\n30\n30\n456\n1,091\n0\n\n\n\n\n\n60\n30\n222\n236\n0\n\n\n\n\n\n90\n30\n104\n121\n0"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users",
    "href": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users",
    "title": "CohortSurvival",
    "section": "Exercise 1 - Estimate treatment adherence of aspirin users",
    "text": "Exercise 1 - Estimate treatment adherence of aspirin users\nCreate a cohort of aspirin use and estimate treatment adherence.\n\nHow many people are at risk at cohort entry, and how many are left at risk after a month?\nPlot the drug discontinuation curve and compare it to the ibuprofen one. If you can, plot both Kaplan-Meier curves in the same survival plot.\n\n\nHint: use omopgenerics::bind() and the colour option in plotSurvival() for the two outcomes."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-1",
    "href": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-1",
    "title": "CohortSurvival",
    "section": "Exercise 1 - Estimate treatment adherence of aspirin users",
    "text": "Exercise 1 - Estimate treatment adherence of aspirin users\n\ncdm &lt;- generateIngredientCohortSet(\n  cdm = cdm,\n  name = \"aspirin\",\n  ingredient = \"aspirin\",\n  gapEra = 7\n)\n\nsurvivalResultAspirin &lt;- estimateSingleEventSurvival(\n  cdm,\n  \"aspirin\",\n  \"aspirin\",\n  outcomeDateVariable = \"cohort_end_date\"\n)\n\nsurvivalResultAll &lt;- omopgenerics::bind(\n  survivalResult,\n  survivalResultAspirin\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-2",
    "href": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-2",
    "title": "CohortSurvival",
    "section": "Exercise 1 - Estimate treatment adherence of aspirin users",
    "text": "Exercise 1 - Estimate treatment adherence of aspirin users\n\nriskTable(survivalResultAll)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nTarget cohort\nOutcome name\nTime\nEvent gap\n\nEstimate name\n\n\n\nNumber at risk\nNumber events\nNumber censored\n\n\n\n\nSynthea\nibuprofen\nibuprofen\n0\n30\n1,448\n0\n0\n\n\n\n\n\n30\n30\n456\n1,091\n0\n\n\n\n\n\n60\n30\n222\n236\n0\n\n\n\n\n\n90\n30\n104\n121\n0\n\n\n\naspirin\naspirin\n0\n30\n1,927\n0\n0\n\n\n\n\n\n30\n30\n349\n1,651\n0\n\n\n\n\n\n60\n30\n180\n176\n0\n\n\n\n\n\n90\n30\n87\n100\n0"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-3",
    "href": "Practicals/CohortSurvival/index.html#exercise-1---estimate-treatment-adherence-of-aspirin-users-3",
    "title": "CohortSurvival",
    "section": "Exercise 1 - Estimate treatment adherence of aspirin users",
    "text": "Exercise 1 - Estimate treatment adherence of aspirin users\n\nplotSurvival(survivalResultAll, colour = \"outcome\")"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#adding-strata---example",
    "href": "Practicals/CohortSurvival/index.html#adding-strata---example",
    "title": "CohortSurvival",
    "section": "Adding strata - Example",
    "text": "Adding strata - Example\n\n\n\n\nWe can stratify our survival study by any variables available in the target cohort provided. We can use PatientProfiles to add, for instance, demographic information.\n\n\n\ncdm$ibuprofen_strata &lt;- cdm$ibuprofen |&gt; \n  PatientProfiles::addAge(\n    ageGroup = list(c(0,40),c(41,70),c(71,150))\n  ) |&gt;\n  compute(name = \"ibuprofen_strata\")\n\ncdm$ibuprofen_strata |&gt;\n  dplyr::select(-\"age\") |&gt;\n  head()\n\n# Source:   SQL [?? x 5]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/Rtmpr5aZiQ/file2142577b9f61.duckdb]\n  cohort_definition_id subject_id cohort_start_date cohort_end_date age_group\n                 &lt;int&gt;      &lt;int&gt; &lt;date&gt;            &lt;date&gt;          &lt;chr&gt;    \n1                    1          6 1976-05-01        1976-06-30      0 to 40  \n2                    1         16 2004-01-21        2004-03-21      0 to 40  \n3                    1        114 1988-08-14        1988-08-28      0 to 40  \n4                    1         40 2018-06-14        2018-07-14      41 to 70 \n5                    1         72 2008-06-19        2008-07-17      41 to 70 \n6                    1         53 1974-05-05        1974-06-04      0 to 40"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#adding-strata---example-1",
    "href": "Practicals/CohortSurvival/index.html#adding-strata---example-1",
    "title": "CohortSurvival",
    "section": "Adding strata - Example",
    "text": "Adding strata - Example\n\nsurvivalResultStrata &lt;- estimateSingleEventSurvival(\n   cdm,\n  \"ibuprofen_strata\",\n  \"ibuprofen_strata\",\n  outcomeDateVariable = \"cohort_end_date\",\n  strata = list(\"age_group\")\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#adding-strata---example-2",
    "href": "Practicals/CohortSurvival/index.html#adding-strata---example-2",
    "title": "CohortSurvival",
    "section": "Adding strata - Example",
    "text": "Adding strata - Example\n\nplotSurvival(survivalResultStrata, colour = \"age_group\", riskTable = TRUE)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-2---stratification",
    "href": "Practicals/CohortSurvival/index.html#exercise-2---stratification",
    "title": "CohortSurvival",
    "section": "Exercise 2 - Stratification",
    "text": "Exercise 2 - Stratification\nUse the same aspirin cohort as before.\n\nAdd both sex and age_group information.\nEstimate treatment adherence and plot all Kaplan-Meier curves in one plot."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-2---stratification-1",
    "href": "Practicals/CohortSurvival/index.html#exercise-2---stratification-1",
    "title": "CohortSurvival",
    "section": "Exercise 2 - Stratification",
    "text": "Exercise 2 - Stratification\n\ncdm$aspirin_strata &lt;- cdm$aspirin |&gt; \n  PatientProfiles::addDemographics(\n    ageGroup = list(\"kids\" = c(0,18), \"adults\" = c(19,150))\n  ) |&gt;\n  compute(name = \"aspirin_strata\")\n\nsurvivalResultStrata &lt;- estimateSingleEventSurvival(\n   cdm,\n  \"aspirin_strata\",\n  \"aspirin_strata\",\n  outcomeDateVariable = \"cohort_end_date\",\n  strata = list(\"age_group\", \"sex\", c(\"age_group\", \"sex\"))\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-2---stratification-2",
    "href": "Practicals/CohortSurvival/index.html#exercise-2---stratification-2",
    "title": "CohortSurvival",
    "section": "Exercise 2 - Stratification",
    "text": "Exercise 2 - Stratification\n\nplotSurvival(survivalResultStrata, colour = \"age_group\", facet = \"sex\")"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#lets-play-with-the-parameters-of-the-survival-estimation-function",
    "href": "Practicals/CohortSurvival/index.html#lets-play-with-the-parameters-of-the-survival-estimation-function",
    "title": "CohortSurvival",
    "section": "Let’s play with the parameters of the survival estimation function",
    "text": "Let’s play with the parameters of the survival estimation function\nReminder of all possible ways we can tweak our analysis:\n\n# don't run\nestimateSingleEventSurvival(\n  cdm = cdm,\n  targetCohortTable = \"ibuprofen\",\n  outcomeCohortTable = \"ibuprofen\",\n  outcomeDateVariable = \"cohort_end_date\",\n  outcomeWashout = Inf,\n  censorOnCohortExit = FALSE,\n  censorOnDate = NULL,\n  followUpDays = Inf,\n  strata = NULL,\n  eventGap = 30,\n  estimateGap = 1,\n  restrictedMeanFollowUp = NULL,\n  minimumSurvivalDays = 1\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#changing-inputs---example",
    "href": "Practicals/CohortSurvival/index.html#changing-inputs---example",
    "title": "CohortSurvival",
    "section": "Changing inputs - Example",
    "text": "Changing inputs - Example\n\n\n\nLet’s change the event gap to a weekly aggregation and display the risk table under the plot.\n\n\nsurvivalResultEventGap &lt;- estimateSingleEventSurvival(\n   cdm,\n  \"ibuprofen\",\n  \"ibuprofen\",\n  outcomeDateVariable = \"cohort_end_date\",\n  eventGap = 7\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#changing-inputs---example-1",
    "href": "Practicals/CohortSurvival/index.html#changing-inputs---example-1",
    "title": "CohortSurvival",
    "section": "Changing inputs - Example",
    "text": "Changing inputs - Example\n\nplotSurvival(survivalResultEventGap, riskTable = TRUE, riskInterval = 7)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs",
    "href": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs",
    "title": "CohortSurvival",
    "section": "Exercise 3 - Changing inputs",
    "text": "Exercise 3 - Changing inputs\nKeep working with the cohort of individuals starting aspirin prescription.\n\nNow estimate survival with a 5-year washout period, instead of considering first events."
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs-1",
    "href": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs-1",
    "title": "CohortSurvival",
    "section": "Exercise 3 - Changing inputs",
    "text": "Exercise 3 - Changing inputs\n\nsurvivalResultAspirinTuned &lt;- estimateSingleEventSurvival(\n   cdm,\n  \"aspirin\",\n  \"aspirin\",\n  outcomeDateVariable = \"cohort_end_date\",\n  outcomeWashout = 1825\n)\n\nomopgenerics::bind(survivalResultAspirin, survivalResultAspirinTuned) |&gt; \n  tableSurvival()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nTarget cohort\nOutcome name\nOutcome washout\n\nEstimate name\n\n\n\nNumber records\nNumber events\nMedian survival (95% CI)\nRestricted mean survival (95% CI)\n\n\n\n\nSynthea\naspirin\naspirin\nInf\n1,927\n1,927\n14.00 (14.00, 14.00)\n23.00 (22.00, 23.00)\n\n\n\n\n\n1825\n3,020\n3,020\n14.00 (14.00, 14.00)\n25.00 (25.00, 26.00)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs-2",
    "href": "Practicals/CohortSurvival/index.html#exercise-3---changing-inputs-2",
    "title": "CohortSurvival",
    "section": "Exercise 3 - Changing inputs",
    "text": "Exercise 3 - Changing inputs\n\nplotSurvival(omopgenerics::bind(survivalResultAspirin, survivalResultAspirinTuned), \n             colour = \"outcome_washout\")"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-4---survival-with-different-exposure-and-outcome",
    "href": "Practicals/CohortSurvival/index.html#exercise-4---survival-with-different-exposure-and-outcome",
    "title": "CohortSurvival",
    "section": "Exercise 4 - Survival with different exposure and outcome",
    "text": "Exercise 4 - Survival with different exposure and outcome\nWhat is the time to first myocardial infraction after starting simvastatin or aspirin treatment, and how does this differ between both prescription drugs?"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-4---mi-after-start-of-simvastatin-or-aspirin",
    "href": "Practicals/CohortSurvival/index.html#exercise-4---mi-after-start-of-simvastatin-or-aspirin",
    "title": "CohortSurvival",
    "section": "Exercise 4 - MI after start of simvastatin or aspirin",
    "text": "Exercise 4 - MI after start of simvastatin or aspirin\n\nconceptSetMI &lt;- CodelistGenerator::getCandidateCodes(cdm, keywords = \"myocardial\")\nmi &lt;- list(\"mi\" = conceptSetMI$concept_id)\ncdm$mi &lt;- CohortConstructor::conceptCohort(\n  cdm, conceptSet = mi, name = \"mi\"\n)\n\ncdm &lt;- DrugUtilisation::generateIngredientCohortSet(\n  cdm, \n  name = \"statins\",\n  ingredient = c(\"simvastatin\", \"aspirin\"),\n  gapEra = 7\n)\n\nsurvivalStatin &lt;- estimateSingleEventSurvival(\n  cdm,\n  \"statins\",\n  \"mi\"\n)"
  },
  {
    "objectID": "Practicals/CohortSurvival/index.html#exercise-4---mi-after-start-of-simvastatin-or-aspirin-1",
    "href": "Practicals/CohortSurvival/index.html#exercise-4---mi-after-start-of-simvastatin-or-aspirin-1",
    "title": "CohortSurvival",
    "section": "Exercise 4 - MI after start of simvastatin or aspirin",
    "text": "Exercise 4 - MI after start of simvastatin or aspirin\n\nplotSurvival(survivalStatin, colour = \"target_cohort\")"
  },
  {
    "objectID": "Practicals/OmopSketch/index.html#omopsketch",
    "href": "Practicals/OmopSketch/index.html#omopsketch",
    "title": "OmopSketch",
    "section": "OmopSketch",
    "text": "OmopSketch"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#introduction",
    "href": "Practicals/CohortConstructor/index.html#introduction",
    "title": "CohortConstructor",
    "section": "Introduction",
    "text": "Introduction\n\nCohortConstructor package is designed to support cohort building pipelines in R, using data mapped to the OMOP Common Data Model.\n\n\n\n\n\nThe code is publicly available in OHDSI’s GitHub repository CohortConstructor.\n\n\n\n\n\nCohortConstructor v0.4.0 is available in CRAN.\n\n\n\n\n\nVignettes with further information can be found in the package website."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohortconstructor-pipeline",
    "href": "Practicals/CohortConstructor/index.html#cohortconstructor-pipeline",
    "title": "CohortConstructor",
    "section": "CohortConstructor pipeline",
    "text": "CohortConstructor pipeline\n\n\n\n\n1) Create base cohorts\nCohorts defined using clinical concepts (e.g., asthma diagnoses) or demographics (e.g., females aged &gt;18)\n\n\n\n\n\n2) Cohort-curation\nTranform base cohorts to meet study-specific inclusion criteria."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#function-sets",
    "href": "Practicals/CohortConstructor/index.html#function-sets",
    "title": "CohortConstructor",
    "section": "Function Sets",
    "text": "Function Sets\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nBase cohorts Cohort construction based on clinical concepts or demographics.\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nRequirements and Filtering Demographic restrictions, event presence/absence conditions, and filtering specific records.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nUpdate cohort entry and exit Adjusting entry and exit dates to align with study periods, observation windows, or key events.\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nTransformation and Combination Merging, stratifying, collapsing, matching, or intersecting cohorts."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#functions-to-build-base-cohorts",
    "href": "Practicals/CohortConstructor/index.html#functions-to-build-base-cohorts",
    "title": "CohortConstructor",
    "section": "Functions to build base cohorts",
    "text": "Functions to build base cohorts\n\n\n\n\ndemographicsCohort()\n\n\n\n\n\nconceptCohort()\n\n\n\n\n\nmeasurementCohort()\n\n\n\n\n\ndeathCohort()\n\n\n\n\nDownload completed!"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#demographics-based---example",
    "href": "Practicals/CohortConstructor/index.html#demographics-based---example",
    "title": "CohortConstructor",
    "section": "Demographics based - Example",
    "text": "Demographics based - Example\n\n\n\n\nTwo cohorts, females and males, both aged 18 to 60 years old, with at least 365 days of previous observation in the database.\n\n\n\ncdm$age_cohort &lt;- demographicsCohort(\n  cdm = cdm, \n  ageRange = c(18, 60), \n  sex = c(\"Female\", \"Male\"),\n  minPriorObservation = 365,\n  name = \"age_cohort\"\n)\n\nsettings(cdm$age_cohort)\n\n# A tibble: 2 × 5\n  cohort_definition_id cohort_name    age_range sex    min_prior_observation\n                 &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n1                    1 demographics_1 18_60     Female                   365\n2                    2 demographics_2 18_60     Male                     365"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#demographics-based---example-1",
    "href": "Practicals/CohortConstructor/index.html#demographics-based---example-1",
    "title": "CohortConstructor",
    "section": "Demographics based - Example",
    "text": "Demographics based - Example\n\n\n\n\ncohortCount(cdm$age_cohort)\n\n# A tibble: 2 × 3\n  cohort_definition_id number_records number_subjects\n                 &lt;int&gt;          &lt;int&gt;           &lt;int&gt;\n1                    1           1373            1373\n2                    2           1321            1321\n\n\n\n\n\n\n\nattrition(cdm$age_cohort)\n\n# A tibble: 8 × 7\n  cohort_definition_id number_records number_subjects reason_id reason          \n                 &lt;int&gt;          &lt;int&gt;           &lt;int&gt;     &lt;int&gt; &lt;chr&gt;           \n1                    1           2694            2694         1 Initial qualify…\n2                    1           1373            1373         2 Sex requirement…\n3                    1           1373            1373         3 Age requirement…\n4                    1           1373            1373         4 Prior observati…\n5                    2           2694            2694         1 Initial qualify…\n6                    2           1321            1321         2 Sex requirement…\n7                    2           1321            1321         3 Age requirement…\n8                    2           1321            1321         4 Prior observati…\n# ℹ 2 more variables: excluded_records &lt;int&gt;, excluded_subjects &lt;int&gt;"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#demographics-based---example-2",
    "href": "Practicals/CohortConstructor/index.html#demographics-based---example-2",
    "title": "CohortConstructor",
    "section": "Demographics based - Example",
    "text": "Demographics based - Example\n\n\n\nTo better visualise the attrition, we can use the package CohortCharacteristics to create a formatted table:\n\ncdm$age_cohort |&gt; summariseCohortAttrition() |&gt; tableCohortAttrition()\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nSynthea; demographics_1\n\n\nInitial qualifying events\n2,694\n2,694\n0\n0\n\n\nSex requirement: Female\n1,373\n1,373\n1,321\n1,321\n\n\nAge requirement: 18 to 60\n1,373\n1,373\n0\n0\n\n\nPrior observation requirement: 365 days\n1,373\n1,373\n0\n0\n\n\nSynthea; demographics_2\n\n\nInitial qualifying events\n2,694\n2,694\n0\n0\n\n\nSex requirement: Male\n1,321\n1,321\n1,373\n1,373\n\n\nAge requirement: 18 to 60\n1,321\n1,321\n0\n0\n\n\nPrior observation requirement: 365 days\n1,321\n1,321\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#concept-based---example",
    "href": "Practicals/CohortConstructor/index.html#concept-based---example",
    "title": "CohortConstructor",
    "section": "Concept based - Example",
    "text": "Concept based - Example\n\n\n\n\nLet’s create a cohort of medications that contains two drugs: diclofenac, and acetaminophen.\n\n\n\n\nGet relevant codelists with CodelistGenerator\n\n\n\n\n\ndrug_codes &lt;- getDrugIngredientCodes(\n  cdm = cdm, \n  name = c(\"diclofenac\", \"acetaminophen\"),\n  nameStyle = \"{concept_name}\"\n)\ndrug_codes\n\n\n- acetaminophen (7 codes)\n- diclofenac (1 codes)"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#concept-based---example-1",
    "href": "Practicals/CohortConstructor/index.html#concept-based---example-1",
    "title": "CohortConstructor",
    "section": "Concept based - Example",
    "text": "Concept based - Example\n\nCreate concept based cohorts\n\n\n\ncdm$medications &lt;- conceptCohort(\n  cdm = cdm, \n  conceptSet = drug_codes, \n  name = \"medications\"\n)\n\nsettings(cdm$medications)\n\n# A tibble: 2 × 4\n  cohort_definition_id cohort_name   cdm_version vocabulary_version\n                 &lt;int&gt; &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;             \n1                    1 acetaminophen 5.3         v5.0 18-JAN-19    \n2                    2 diclofenac    5.3         v5.0 18-JAN-19"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#concept-based---example-2",
    "href": "Practicals/CohortConstructor/index.html#concept-based---example-2",
    "title": "CohortConstructor",
    "section": "Concept based - Example",
    "text": "Concept based - Example\n\n\n\n\nAttrition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nacetaminophen\n\n\nInitial qualifying events\n14,205\n2,679\n0\n0\n\n\nRecord start &lt;= record end\n14,205\n2,679\n0\n0\n\n\nRecord in observation\n14,205\n2,679\n0\n0\n\n\nNon-missing sex\n14,205\n2,679\n0\n0\n\n\nNon-missing year of birth\n14,205\n2,679\n0\n0\n\n\nMerge overlapping records\n13,908\n2,679\n297\n0\n\n\ndiclofenac\n\n\nInitial qualifying events\n850\n850\n0\n0\n\n\nRecord start &lt;= record end\n850\n850\n0\n0\n\n\nRecord in observation\n830\n830\n20\n20\n\n\nNon-missing sex\n830\n830\n0\n0\n\n\nNon-missing year of birth\n830\n830\n0\n0\n\n\nMerge overlapping records\n830\n830\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#concept-based---example-3",
    "href": "Practicals/CohortConstructor/index.html#concept-based---example-3",
    "title": "CohortConstructor",
    "section": "Concept based - Example",
    "text": "Concept based - Example\n\n\n\n\nCohort codelist as an attribute\n\n\n\nattr(cdm$medications, \"cohort_codelist\")\n\n# Source:   table&lt;my_study_medications_codelist&gt; [?? x 4]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpFDo7PG/file21e37ba77b30.duckdb]\n  cohort_definition_id codelist_name concept_id codelist_type\n                 &lt;int&gt; &lt;chr&gt;              &lt;int&gt; &lt;chr&gt;        \n1                    1 acetaminophen    1125315 index event  \n2                    1 acetaminophen    1127078 index event  \n3                    1 acetaminophen    1127433 index event  \n4                    1 acetaminophen   40229134 index event  \n5                    1 acetaminophen   40231925 index event  \n6                    1 acetaminophen   40162522 index event  \n7                    1 acetaminophen   19133768 index event  \n8                    2 diclofenac       1124300 index event"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#get-started-connecto-to-eunomia",
    "href": "Practicals/CohortConstructor/index.html#get-started-connecto-to-eunomia",
    "title": "CohortConstructor",
    "section": "Get started: connecto to Eunomia",
    "text": "Get started: connecto to Eunomia\n\n\n\n\n# Load relevant packages\nlibrary(CDMConnector)\nlibrary(CodelistGenerator)\nlibrary(CohortConstructor)\nlibrary(CohortCharacteristics)\nlibrary(dplyr)\n\n\n# Download Eunomia \nrequireEunomia()\n\n# Create duckdb connection with Eunomia\ncon &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())\n\n# Create CDM reference object\ncdm &lt;- cdmFromCon(\n  con, \n  cdmSchema = \"main\", \n  writeSchema = \"main\",\n  writePrefix = \"my_study_\"\n)"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-1---base-cohorts",
    "href": "Practicals/CohortConstructor/index.html#exercise-1---base-cohorts",
    "title": "CohortConstructor",
    "section": "Exercise 1 - Base cohorts",
    "text": "Exercise 1 - Base cohorts\n\n\n\nCreate a cohort of aspirin use.\n\nHow many records does it have? And how many subjects?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nVariable name\nEstimate name\n\nCohort name\n\n\n\naspirin\n\n\n\n\nSynthea\nNumber records\nN\n4,379\n\n\n\nNumber subjects\nN\n1,927"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#functions-to-apply-requirements-and-filter",
    "href": "Practicals/CohortConstructor/index.html#functions-to-apply-requirements-and-filter",
    "title": "CohortConstructor",
    "section": "Functions to apply requirements and filter",
    "text": "Functions to apply requirements and filter\n\n\n\n\n\n\n\nOn demographics\n\nrequireDemographics()\nrequireAge()\nrequireSex()\nrequirePriorObservation()\nrequireFutureObservation()\n\n\n\n\n\n\n\n\nOn cohort entries\n\nrequireIsFirstEntry()\nrequireIsLastEntry()\nrequireIsEntry()\n\n\n\n\n\n\nRequire presence or absence based on other cohorts, concepts, and tables\n\nrequireCohortIntersect()\nrequireConceptIntersect()\nrequireTableIntersect()\n\n\n\n\n\n\n\n\nOther\n\nrequireInDateRange()\nrequireMinCohortCount()"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\n\n\nWe can apply different inclusion criteria using CohortConstructor’s functions in a pipe-line fashion. For instance, in what follows we require\n\nonly first record per person\nsubjects 18 years old or more at cohort start date\nonly females\nat least 30 days of prior observation at cohort start date\n\n\n\n\n\ncdm$medications_requirement &lt;- cdm$medications |&gt; \n  requireIsFirstEntry(name = \"medications_requirement\") |&gt; \n  requireDemographics(\n    ageRange = list(c(18, 150)),\n    sex = \"Female\", \n    minPriorObservation = 30\n  )"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example-1",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example-1",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\nAttrition Acetaminophen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nacetaminophen\n\n\nInitial qualifying events\n14,205\n2,679\n0\n0\n\n\nRecord start &lt;= record end\n14,205\n2,679\n0\n0\n\n\nRecord in observation\n14,205\n2,679\n0\n0\n\n\nNon-missing sex\n14,205\n2,679\n0\n0\n\n\nNon-missing year of birth\n14,205\n2,679\n0\n0\n\n\nMerge overlapping records\n13,908\n2,679\n297\n0\n\n\nRestricted to first entry\n2,679\n2,679\n11,229\n0\n\n\nAge requirement: 18 to 150\n309\n309\n2,370\n2,370\n\n\nSex requirement: Female\n176\n176\n133\n133\n\n\nPrior observation requirement: 30 days\n176\n176\n0\n0\n\n\nFuture observation requirement: 0 days\n176\n176\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example-2",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example-2",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\nAttrition Diclofenac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\ndiclofenac\n\n\nInitial qualifying events\n850\n850\n0\n0\n\n\nRecord start &lt;= record end\n850\n850\n0\n0\n\n\nRecord in observation\n830\n830\n20\n20\n\n\nNon-missing sex\n830\n830\n0\n0\n\n\nNon-missing year of birth\n830\n830\n0\n0\n\n\nMerge overlapping records\n830\n830\n0\n0\n\n\nRestricted to first entry\n830\n830\n0\n0\n\n\nAge requirement: 18 to 150\n830\n830\n0\n0\n\n\nSex requirement: Female\n435\n435\n395\n395\n\n\nPrior observation requirement: 30 days\n435\n435\n0\n0\n\n\nFuture observation requirement: 0 days\n435\n435\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example-3",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example-3",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\n\nNow, we only want to keep those exposures coinciding with at least one healthcare visit on that same day:\n\n\n\ncdm$medications_requirement &lt;- cdm$medications_requirement |&gt; \n  requireTableIntersect(\n    tableName = \"visit_occurrence\",\n    window = c(0, 0),\n    intersections = c(1, Inf)\n  )"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example-4",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example-4",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\nAttrition Acetaminophen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nacetaminophen\n\n\nInitial qualifying events\n14,205\n2,679\n0\n0\n\n\nRecord start &lt;= record end\n14,205\n2,679\n0\n0\n\n\nRecord in observation\n14,205\n2,679\n0\n0\n\n\nNon-missing sex\n14,205\n2,679\n0\n0\n\n\nNon-missing year of birth\n14,205\n2,679\n0\n0\n\n\nMerge overlapping records\n13,908\n2,679\n297\n0\n\n\nRestricted to first entry\n2,679\n2,679\n11,229\n0\n\n\nAge requirement: 18 to 150\n309\n309\n2,370\n2,370\n\n\nSex requirement: Female\n176\n176\n133\n133\n\n\nPrior observation requirement: 30 days\n176\n176\n0\n0\n\n\nFuture observation requirement: 0 days\n176\n176\n0\n0\n\n\nIn table visit_occurrence between 0 & 0 days relative to cohort_start_date between 1 and Inf\n1\n1\n175\n175"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#requirement-functions---example-5",
    "href": "Practicals/CohortConstructor/index.html#requirement-functions---example-5",
    "title": "CohortConstructor",
    "section": "Requirement functions - Example",
    "text": "Requirement functions - Example\n\n\n\nAttrition Diclofenac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\ndiclofenac\n\n\nInitial qualifying events\n850\n850\n0\n0\n\n\nRecord start &lt;= record end\n850\n850\n0\n0\n\n\nRecord in observation\n830\n830\n20\n20\n\n\nNon-missing sex\n830\n830\n0\n0\n\n\nNon-missing year of birth\n830\n830\n0\n0\n\n\nMerge overlapping records\n830\n830\n0\n0\n\n\nRestricted to first entry\n830\n830\n0\n0\n\n\nAge requirement: 18 to 150\n830\n830\n0\n0\n\n\nSex requirement: Female\n435\n435\n395\n395\n\n\nPrior observation requirement: 30 days\n435\n435\n0\n0\n\n\nFuture observation requirement: 0 days\n435\n435\n0\n0\n\n\nIn table visit_occurrence between 0 & 0 days relative to cohort_start_date between 1 and Inf\n0\n0\n435\n435"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-2---requirement-and-filtering",
    "href": "Practicals/CohortConstructor/index.html#exercise-2---requirement-and-filtering",
    "title": "CohortConstructor",
    "section": "Exercise 2 - Requirement and filtering",
    "text": "Exercise 2 - Requirement and filtering\nCreate a new cohort named “aspirin_last” by applying the following criteria to the base aspirin cohort:\n\nInclude only the last drug exposure for each subject.\nInclude exposures that start between January 1, 1960, and December 31, 1979.\nExclude individuals with an amoxicillin exposure in the 7 days prior to the aspirin exposure.\n\n\nMove to the next slide to see the attrition."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-2---requirement-and-filtering-1",
    "href": "Practicals/CohortConstructor/index.html#exercise-2---requirement-and-filtering-1",
    "title": "CohortConstructor",
    "section": "Exercise 2 - Requirement and filtering",
    "text": "Exercise 2 - Requirement and filtering\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nSynthea; aspirin\n\n\nInitial qualifying events\n4,380\n1,927\n0\n0\n\n\nRecord start &lt;= record end\n4,380\n1,927\n0\n0\n\n\nRecord in observation\n4,380\n1,927\n0\n0\n\n\nNon-missing sex\n4,380\n1,927\n0\n0\n\n\nNon-missing year of birth\n4,380\n1,927\n0\n0\n\n\nMerge overlapping records\n4,379\n1,927\n1\n0\n\n\nRestricted to last entry\n1,927\n1,927\n2,452\n0\n\n\ncohort_start_date after 1960-01-01\n1,511\n1,511\n416\n416\n\n\ncohort_start_date before 1979-12-31\n1,174\n1,174\n337\n337\n\n\nNot in concept amoxicillin between -7 & 0 days relative to cohort_start_date\n1,163\n1,163\n11\n11"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#functions-to-update-cohort-start-and-end-dates",
    "href": "Practicals/CohortConstructor/index.html#functions-to-update-cohort-start-and-end-dates",
    "title": "CohortConstructor",
    "section": "Functions to update cohort start and end dates",
    "text": "Functions to update cohort start and end dates\n\n\n\n\n\n\n\nCohort exit\n\nexitAtObservationEnd()\nexitAtDeath()\nexitAtFirstDate()\nexitAtLastDate()\n\n\n\n\n\n\n\n\nCohort entry\n\nentryAtFirstDate()\nentryAtLastDate()\n\n\n\n\n\n\nTrim start and end dates\n\ntrimDemographics()\ntrimToDateRange()\n\n\n\n\n\n\n\n\nPad start and end dates\n\npadCohortDate()\npadCohortEnd()\npadCohortStart()"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#update-cohort-entry-and-exit---example",
    "href": "Practicals/CohortConstructor/index.html#update-cohort-entry-and-exit---example",
    "title": "CohortConstructor",
    "section": "Update cohort entry and exit - Example",
    "text": "Update cohort entry and exit - Example\n\n\n\n\nWe can trim start and end dates to match demographic requirements.\n\nFor instance, cohort dates can be trimmed so the subject contributes time while:\n\nAged 20 to 40 years old\nPrior observation of at least 365 days\n\n\n\n\n\ncdm$medications_trimmed &lt;- cdm$medications |&gt;\n  trimDemographics(\n    ageRange = list(c(20, 40)),\n    minPriorObservation = 365,\n    name = \"medications_trimmed\"\n  )"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#update-cohort-entry-and-exit---example-1",
    "href": "Practicals/CohortConstructor/index.html#update-cohort-entry-and-exit---example-1",
    "title": "CohortConstructor",
    "section": "Update cohort entry and exit - Example",
    "text": "Update cohort entry and exit - Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nacetaminophen\n\n\nInitial qualifying events\n14,205\n2,679\n0\n0\n\n\nRecord start &lt;= record end\n14,205\n2,679\n0\n0\n\n\nRecord in observation\n14,205\n2,679\n0\n0\n\n\nNon-missing sex\n14,205\n2,679\n0\n0\n\n\nNon-missing year of birth\n14,205\n2,679\n0\n0\n\n\nMerge overlapping records\n13,908\n2,679\n297\n0\n\n\nAge requirement: 20 to 40\n4,049\n2,124\n9,859\n555\n\n\nPrior observation requirement: 365 days\n4,049\n2,124\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-3---update-cohort-entry-and-exit",
    "href": "Practicals/CohortConstructor/index.html#exercise-3---update-cohort-entry-and-exit",
    "title": "CohortConstructor",
    "section": "Exercise 3 - Update cohort entry and exit",
    "text": "Exercise 3 - Update cohort entry and exit\nCreate a cohort of ibuprofen. From it, create an “ibuprofen_death” cohort which includes only subjects that have a future record of death in the database, and update cohort end date to be the death date.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nSynthea; ibuprofen\n\n\nInitial qualifying events\n2,148\n1,451\n0\n0\n\n\nRecord start &lt;= record end\n2,148\n1,451\n0\n0\n\n\nRecord in observation\n2,148\n1,451\n0\n0\n\n\nNon-missing sex\n2,148\n1,451\n0\n0\n\n\nNon-missing year of birth\n2,148\n1,451\n0\n0\n\n\nMerge overlapping records\n2,148\n1,451\n0\n0\n\n\nNo death recorded\n0\n0\n2,148\n1,451\n\n\nExit at death\n0\n0\n0\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#functions-for-cohort-transformation-and-combination",
    "href": "Practicals/CohortConstructor/index.html#functions-for-cohort-transformation-and-combination",
    "title": "CohortConstructor",
    "section": "Functions for Cohort Transformation and Combination",
    "text": "Functions for Cohort Transformation and Combination\n\n\n\n\nSplit cohorts\n\nyearCohorts()\nstratifyCohorts()\n\n\n\n\n\n\n\n\nCombine cohorts\n\nunionCohorts()\nintersectCohorts()\n\n\n\n\n\n\n\n\nFilter cohorts\n\nsubsetCohorts()\nsampleCohorts()\n\n\n\n\n\n\nMatch cohorts\n\nmatchCohorts()\n\n\n\n\n\n\n\n\nConcatenate entries\n\ncollapseCohorts()\n\n\n\n\n\n\n\n\nCopy and rename cohorts\n\nrenameCohort()\ncopyCohorts()"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohort-combinations---example",
    "href": "Practicals/CohortConstructor/index.html#cohort-combinations---example",
    "title": "CohortConstructor",
    "section": "Cohort combinations - Example",
    "text": "Cohort combinations - Example\n\n\n\n\nCollapse drug exposures that are within a gap of 7 days."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohort-combinations---example-1",
    "href": "Practicals/CohortConstructor/index.html#cohort-combinations---example-1",
    "title": "CohortConstructor",
    "section": "Cohort combinations - Example",
    "text": "Cohort combinations - Example\n\n\n\n\ncdm$medications_collapsed &lt;- cdm$medications |&gt;\n  collapseCohorts(gap = 7, name = \"medications_collapsed\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nacetaminophen\n\n\nInitial qualifying events\n14,205\n2,679\n0\n0\n\n\nRecord start &lt;= record end\n14,205\n2,679\n0\n0\n\n\nRecord in observation\n14,205\n2,679\n0\n0\n\n\nNon-missing sex\n14,205\n2,679\n0\n0\n\n\nNon-missing year of birth\n14,205\n2,679\n0\n0\n\n\nMerge overlapping records\n13,908\n2,679\n297\n0\n\n\nCollapse cohort with a gap of 7 days.\n13,899\n2,679\n9\n0"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohort-combinations---example-2",
    "href": "Practicals/CohortConstructor/index.html#cohort-combinations---example-2",
    "title": "CohortConstructor",
    "section": "Cohort combinations - Example",
    "text": "Cohort combinations - Example\n\n\n\n\nCreate a new cohort that contains people who had an exposure to both diclofenac and acetaminophen at the same time using."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohort-combinations---example-3",
    "href": "Practicals/CohortConstructor/index.html#cohort-combinations---example-3",
    "title": "CohortConstructor",
    "section": "Cohort combinations - Example",
    "text": "Cohort combinations - Example\n\n\n\n\ncdm$intersection &lt;- cdm$medications_collapsed |&gt;\n  CohortConstructor::intersectCohorts(name = \"intersection\")\n\nsettings(cdm$intersection)\n\n# A tibble: 1 × 5\n  cohort_definition_id cohort_name                gap acetaminophen diclofenac\n                 &lt;int&gt; &lt;chr&gt;                    &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;\n1                    1 acetaminophen_diclofenac     0             1          1"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#cohort-combinations---example-4",
    "href": "Practicals/CohortConstructor/index.html#cohort-combinations---example-4",
    "title": "CohortConstructor",
    "section": "Cohort combinations - Example",
    "text": "Cohort combinations - Example\n\n\n\n\nattr(cdm$intersection, \"cohort_codelist\")\n\n# Source:   table&lt;my_study_intersection_codelist&gt; [?? x 4]\n# Database: DuckDB v1.3.0 [unknown@Linux 6.11.0-1015-azure:R 4.5.1//tmp/RtmpFDo7PG/file21e37ba77b30.duckdb]\n  cohort_definition_id codelist_name concept_id codelist_type\n                 &lt;int&gt; &lt;chr&gt;              &lt;int&gt; &lt;chr&gt;        \n1                    1 acetaminophen    1125315 index event  \n2                    1 acetaminophen    1127078 index event  \n3                    1 acetaminophen    1127433 index event  \n4                    1 acetaminophen   40229134 index event  \n5                    1 acetaminophen   40231925 index event  \n6                    1 acetaminophen   40162522 index event  \n7                    1 acetaminophen   19133768 index event  \n8                    1 diclofenac       1124300 index event"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-4---transformation-and-combination",
    "href": "Practicals/CohortConstructor/index.html#exercise-4---transformation-and-combination",
    "title": "CohortConstructor",
    "section": "Exercise 4 - Transformation and Combination",
    "text": "Exercise 4 - Transformation and Combination\nFrom the ibuprofen base cohort (not subseted to death), create five separate cohorts. Each cohort should include records for one specific year from the following list: 1975, 1976, 1977, 1978, 1979, and 1980.\n\n\nHow many records and subjects are in each cohort?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDM name\nVariable name\nEstimate name\n\nCohort name\n\n\n\nibuprofen_1975\nibuprofen_1976\nibuprofen_1977\nibuprofen_1978\nibuprofen_1979\nibuprofen_1980\n\n\n\n\nSynthea\nNumber records\nN\n71\n64\n60\n75\n66\n63\n\n\n\nNumber subjects\nN\n68\n61\n60\n74\n66\n63"
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-5",
    "href": "Practicals/CohortConstructor/index.html#exercise-5",
    "title": "CohortConstructor",
    "section": "Exercise 5",
    "text": "Exercise 5\nUse CohortConstructor to create a cohort with the following criteria:\n\nUsers of diclofenac\nFemales aged 16 or older\nWith at least 365 days of continuous observation prior to exposure\nWithout prior exposure to amoxicillin\nWith cohort exit defined as first discontinuation of exposure. An exposure being define as recorded exposures within 7-days gap\n\n\nMove to the next slide to see the attrition."
  },
  {
    "objectID": "Practicals/CohortConstructor/index.html#exercise-5-1",
    "href": "Practicals/CohortConstructor/index.html#exercise-5-1",
    "title": "CohortConstructor",
    "section": "Exercise 5",
    "text": "Exercise 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReason\n\nVariable name\n\n\n\nnumber_records\nnumber_subjects\nexcluded_records\nexcluded_subjects\n\n\n\n\nSynthea; diclofenac\n\n\nInitial qualifying events\n850\n850\n0\n0\n\n\nRecord start &lt;= record end\n850\n850\n0\n0\n\n\nRecord in observation\n830\n830\n20\n20\n\n\nNon-missing sex\n830\n830\n0\n0\n\n\nNon-missing year of birth\n830\n830\n0\n0\n\n\nMerge overlapping records\n830\n830\n0\n0\n\n\nAge requirement: 16 to 150\n830\n830\n0\n0\n\n\nSex requirement: Female\n435\n435\n395\n395\n\n\nPrior observation requirement: 365 days\n435\n435\n0\n0\n\n\nFuture observation requirement: 0 days\n435\n435\n0\n0\n\n\nNot in concept amoxicillin between -Inf & -1 days relative to cohort_start_date\n161\n161\n274\n274\n\n\nCollapse cohort with a gap of 7 days.\n161\n161\n0\n0\n\n\nRestricted to first entry\n161\n161\n0\n0"
  },
  {
    "objectID": "Practicals/DrugUtilisation/index.html#drugutilisation",
    "href": "Practicals/DrugUtilisation/index.html#drugutilisation",
    "title": "DrugUtilisation",
    "section": "DrugUtilisation",
    "text": "DrugUtilisation"
  }
]