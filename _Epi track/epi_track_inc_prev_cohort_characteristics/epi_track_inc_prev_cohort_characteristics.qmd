---
title: ""
format:
  revealjs: 
    theme: [simple, custom_1.scss]
    slide-number: true
    preview-links: auto
    margin: 0.07
    code-link: true
    code-line-numbers: false
execute:
  echo: true
---
# IncidencePrevalence
Estimate Incidence and Prevalence in OMOP CDM

![](images/hexsticker.png){fig-align="center"}

## Overview

-   **The basics**
-   Interface
-   More information

## The Basics

1.  Denominator population

2.  Incidence rates

3.  Prevalence

    -   Point prevalence

    -   Period prevalence

## Denominator population

Observation periods <br><br>

![](images/inc%20prev%20diags(10)(4)-denominator%20no%20criteria.drawio.png){fig-align="center" width="350"}

<br>

## Denominator population

Observation periods + study period <br><br>

![](images/inc%20prev%20diags(10)(4)-denom%20study%20period.drawio.png){fig-align="center" width="350"}

<br>

## Denominator population

Observation periods + study period + prior history requirement <br><br>

![](images/inc%20prev%20diags(10)(4)-denom%20without%20age.drawio-01.png){fig-align="center" width="350"}

<br>

## Denominator population

Observation periods + study period + prior history requirement + age (and sex) restriction <br>

![](images/dpop4.png){fig-align="center" width="350"}

<br>

## Incidence rates

Washout all history, no repetitive events <br><br>

![](images/inc_no_rep_washout_all.png){fig-align="center" width="350"}

<br>

## Incidence rates

No washout, no repetitive events <br><br>

![](images/inc_no_rep_no_washout.png){fig-align="center" width="350"}

<br>

## Incidence rates

Some washout, no repetitive events <br><br>

![](images/inc_no_rep_some_washout.png){fig-align="center" width="350"}

<br>

## Incidence rates

Some washout, repetitive events <br><br>

![](images/inc_rep_some_washout.png){fig-align="center" width="350"}

<br>

## Prevalence

Point prevalence <br><br>

![](images/point_prev.png)

<br>

## Prevalence

Period prevalence <br><br>

![](images/period_prev.png)

<br>

## Overview

-   Concepts
-   **Interface**
-   More information

## Required packages

```{r, eval=FALSE}
install.packages("IncidencePrevalence")
```

```{r, echo=TRUE, message=FALSE, warning=FALSE}
library(CDMConnector)
library(IncidencePrevalence)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gt)
```

## generateDenominatorCohortSet()
Create a basic denominator population
```{r}
cdm <- IncidencePrevalence::mockIncidencePrevalence(sampleSize = 50000)

cdm <- generateDenominatorCohortSet(cdm, name = "dpop")

cdm$dpop %>%
  glimpse()

```

## generateDenominatorCohortSet()
Add a study period
```{r}
cdm <- generateDenominatorCohortSet(
  cdm = cdm, 
  name = "dpop",
  cohortDateRange = as.Date(c("2008-01-01", "2012-01-01"))
)

cdm$dpop %>%
  glimpse()
```

## generateDenominatorCohortSet()
Look at the n in the denominator
```{r}
cohortCount(cdm$dpop)
```

Look at the settings you used for denominator
```{r}
settings(cdm$dpop)
```

## generateDenominatorCohortSet()
How did you get the denominator population?
```{r}
attrition(cdm$dpop)
```

## generateDenominatorCohortSet()
Adding in more stratification of denominator
```{r}
cdm <- generateDenominatorCohortSet(
  cdm = cdm, 
  name = "dpop",
  cohortDateRange = as.Date(c("2008-01-01", "2012-01-01")),
  ageGroup = list(
    c(0, 49),
    c(50, 100)
  ),
  sex = c("Male", "Female"),
  daysPriorObservation= c(0, 180)
)

cdm$dpop %>%
  glimpse()
```

## generateDenominatorCohortSet()
Have a look at the settings again
```{r}
settings(cdm$dpop)
```

## generateDenominatorCohortSet()
Have a look at the counts
```{r}
cohortCount(cdm$dpop)
```

## Adding time-invariant variables for stratification

If we want to stratify for some time-invariant variable e.g region, ethnicity, we need to add this variable to our denominator.

```{r}
cdm$dpop <- cdm$dpop %>% 
  mutate(group = if_else(as.numeric(subject_id) < 20, "first", "second")) 

cdm$dpop |> 
  glimpse()
```

## generateTargetDenominatorCohortSet()

When we want to stratify on a time-varying variable, we can do this by creating a cohort for it. Once we have the cohort we will will use it when creating our denominator cohort.

## generateTargetDenominatorCohortSet()
Code to create a target denominator
```{r}
personTable <- tibble(
  person_id = c("1", "2", "3", "4", "5"),
  gender_concept_id = c(rep("8507", 2), rep("8532", 3)),
  year_of_birth = 2000,
  month_of_birth = 06,
  day_of_birth = 01
)
observationPeriodTable <- tibble(
  observation_period_id = "1",
  person_id = c("1", "2", "3", "4", "5"),
  observation_period_start_date = c(
    as.Date("2010-12-19"),
    as.Date("2005-04-01"),
    as.Date("2009-04-10"),
    as.Date("2010-08-20"),
    as.Date("2010-01-01")
  ),
  observation_period_end_date = c(
    as.Date("2011-06-19"),
    as.Date("2005-11-29"),
    as.Date("2016-01-02"),
    as.Date("2011-12-11"),
    as.Date("2015-06-01")
  )
)

acute_asthma <- tibble(
  cohort_definition_id = rep("1", 5),
  subject_id = c("3", "3", "5", "5", "2"),
  cohort_start_date = c(
    as.Date("2012-01-01"),
    as.Date("2015-06-01"),
    as.Date("2014-10-01"),
    as.Date("2010-06-01"),
    as.Date("2005-08-20")
  ),
  cohort_end_date = c(
    as.Date("2013-01-01"),
    as.Date("2015-12-31"),
    as.Date("2015-04-01"),
    as.Date("2010-06-01"),
    as.Date("2005-09-20")
  )
)

# mock database
cdm <- IncidencePrevalence::mockIncidencePrevalence(
  personTable = personTable,
  observationPeriodTable = observationPeriodTable,
  targetCohortTable = acute_asthma
)
```

## generateTargetDenominatorCohortSet()
Then we can create the target denominator cohort for just acute asthma patients
```{r}
cdm <- generateTargetDenominatorCohortSet(
  cdm = cdm, 
  name = "denominator_acute_asthma",
  targetCohortTable = "target"
)

cdm$denominator_acute_asthma |> 
  dplyr::glimpse()
```

## generateTargetDenominatorCohortSet()

-   We can add demographic requirements like before. 
-   Note these are applied at the cohort start date of target cohort as default. 
-   You can change this but needs careful thought on why and impact.

```{r}
cdm <- generateTargetDenominatorCohortSet(
  cdm = cdm, 
  name = "denominator_acute_asthma_2",
  ageGroup = list(c(11, 15)),
  sex = "Female",
  daysPriorObservation = 0,
  targetCohortTable = "target",
  requirementsAtEntry = TRUE
)
cdm$denominator_acute_asthma_2 |> 
  dplyr::glimpse()
```

## estimateIncidence()
Generate our denominator then estimate yearly incidence with infinite outcome washout.
```{r}
cdm <- IncidencePrevalence::mockIncidencePrevalence(
  sampleSize = 50000,
  outPre = 0.5
)

cdm <- generateDenominatorCohortSet(
  cdm = cdm, 
  name = "denominator",
  cohortDateRange = as.Date(c("2008-01-01", "2012-01-01")),
  ageGroup = list(
    c(0, 30),
    c(31, 50),
    c(51, 70),
    c(71, 100)
  )
)
inc <- estimateIncidence(
  cdm = cdm,
  denominatorTable = "denominator",
  outcomeTable = "outcome",
  interval = "years",
  outcomeWashout = Inf,
  repeatedEvents = FALSE
)
```

## estimateIncidence()

```{r}
inc %>%
  glimpse()
```

## estimateIncidence()
Generate our denominator then estimate monthly incidence with 0 and 365 outcome washout
```{r}
inc <- estimateIncidence(
  cdm = cdm,
  denominatorTable = "denominator",
  outcomeTable = "outcome",
  interval = c("Months"),
  outcomeWashout = c(0, 365),
  repeatedEvents = FALSE
)
inc %>%
  glimpse()
```

## estimateIncidence()
We can plot the results with one argument!
```{r}
plot <- plotIncidence(inc,
              facet = "denominator_age_group")
```

## estimateIncidence()
Pretty plot but you can make it better by changing settings.
```{r}
plot 
```

## estimateIncidence()
We can make a nice table of the incidence results.
```{r}
tableIncidence(inc)
```

## plotIncidencePopulation()
We can check incidence results are ok so we can look at trends of the denominator population.
```{r}
plot <- plotIncidencePopulation(inc)
```

## plotIncidencePopulation()
We can plot this to understand if our results make sense
```{r}
plot 
```

## estimatePointPrevalence() and estimatePeriodPrevalence()
Create the denominator and calculate point prevalence
```{r}
cdm <- IncidencePrevalence::mockIncidencePrevalence(
  sampleSize = 50000,
  outPre = 0.5
)

cdm <- generateDenominatorCohortSet(
  cdm = cdm, 
  name = "denominator",
  cohortDateRange = as.Date(c("2008-01-01", "2012-01-01")),
  ageGroup = list(
    c(0, 30),
    c(31, 50),
    c(51, 70),
    c(71, 100)
  )
)
prev <- estimatePointPrevalence(
  cdm = cdm,
  denominatorTable = "denominator",
  outcomeTable = "outcome",
  interval = "Years"
)
```

## estimatePointPrevalence() and estimatePeriodPrevalence()

```{r}
prev %>%
  glimpse()
```

## estimatePointPrevalence() and estimatePeriodPrevalence()
Create the denominator and calculate period prevalence
```{r}
prev <- estimatePeriodPrevalence(
  cdm = cdm,
  denominatorTable = "denominator",
  outcomeTable = "outcome",
  interval = "months"
)

prev %>%
  glimpse()
```

## estimatePointPrevalence() and estimatePeriodPrevalence()
We can make pretty plots
```{r}
plot <- plotPrevalence(prev,
              facet = "denominator_age_group")
```

## estimatePointPrevalence() and estimatePeriodPrevalence()
See pretty plots
```{r}
plot 
```

## Overview

-   The Basics
-   Interface
-   **More information**

## Package website

<https://darwin-eu.github.io/IncidencePrevalence/>

## Package paper

<https://onlinelibrary.wiley.com/doi/10.1002/pds.5717>

![](images/incprev.png)

## CohortCharacteristics
Characterising Cohorts in OMOP CDM

![](images/cohortcharacteristics_logo.png){fig-align="center"}

## Overview

-   **The Basics**
-   Interface
-   More information

## The Basics

Table one: vital for any epidemiological study ![](images/tableone.png)

## Overview

-   The Basics
-   **Interface**
-   More information

## Interface

```{r, eval=FALSE}
install.packages("CohortCharacteristics")
```

```{r, echo=TRUE, message=FALSE, warning=FALSE}
library(duckdb)
library(CDMConnector)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(CodelistGenerator)
library(PatientProfiles)
library(CohortCharacteristics)

```

## summariseCharacteristics()

```{r}
con <- dbConnect(duckdb(), dbdir = eunomiaDir())

cdm <- cdmFromCon(
  con = con, cdmSchem = "main", writeSchema = "main", cdmName = "Eunomia"
)

cdm <- generateConceptCohortSet(
  cdm = cdm,
  name = "injuries",
  conceptSet = list(
    "ankle_sprain" = 81151,
    "ankle_fracture" = 4059173,
    "forearm_fracture" = 4278672,
    "hip_fracture" = 4230399
  ),
  end = "event_end_date",
  limit = "all"
)
```

## summariseCharacteristics()

```{r}
chars <- cdm$injuries |>
  summariseCharacteristics(ageGroup = list(c(0, 49), c(50, Inf)))
chars |>
  glimpse()
```

## tableCharacteristics()

```{r}
tableCharacteristics(chars)
```

## summariseCharacteristics()
Get some medications to characterise in our injury cohorts
```{r}
medsCs <- getDrugIngredientCodes(
  cdm = cdm,
  name = c("acetaminophen", "morphine", "warfarin")
)
cdm <- generateConceptCohortSet(
  cdm = cdm,
  name = "meds",
  conceptSet = medsCs,
  end = "event_end_date",
  limit = "all",
  overwrite = TRUE
)
```

## summariseCharacteristics()
Get some conditions to characterise in our injury cohort
```{r}

cdm <- generateConceptCohortSet(
  cdm = cdm,
  name = "conditions",
  conceptSet = list(
    "viral_sinusitis" = 40481087,
    "acute_viral_pharyngitis" = 4112343,
    "acute_bronchitis" = 260139
  ),
  end = "event_end_date",
  limit = "all"
)

```


## summariseCharacteristics()

We can then look at medications and conditions before the index date of our injury cohort
```{r}
chars <- cdm$injuries |>
  summariseCharacteristics(cohortIntersectFlag = list(
    "Medications prior to index date" = list(
      targetCohortTable = "meds",
      window = c(-Inf, -1)
    ),
    "Conditions prior to index date" = list(
      targetCohortTable = "conditions",
      window = c(-Inf, -1)
    )
  ),
  demographics = FALSE)

```


## tableCharacteristics()

```{r}
tableCharacteristics(chars)
```

## Some other fancy functions

We can summarise the cohort attrition of your cohort.
```{r, eval=FALSE}
summariseCohortAttrition()
```

We can summarise all clinical codes in your database. 
```{r, eval=FALSE}
summariseLargeScaleCharacteristics()
```



## Overview

-   The Basics
-   Interface
-   **More information**


## Package website

<https://darwin-eu.github.io/CohortCharacteristics/>

## Top tips :)

-   Translating protocols to code is super hard - dont leave it to interpretation
-   Work closely with data analysts - have a statistical analysis plan + protocol
-   Know what you want and the implications of what you want and timings and index dates!

## Any questions?

![](images/questions.svg){fig-align="center"}
